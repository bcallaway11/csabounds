% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/qott.R
\name{csa.bounds}
\alias{csa.bounds}
\title{csa.bounds}
\usage{
csa.bounds(delt.seq, y.seq, Y1t, Y0tmin1, Y0tmin2, Y0tqteobj, F.y0 = NULL,
  F.y1 = NULL, h = NULL, method = c("level", "rank"), cl = 1)
}
\arguments{
\item{delt.seq}{the possible values to compute bounds on the distribution
of the treatment effect for}

\item{y.seq}{the possible values for y to take}

\item{Y1t}{vector of outcomes for the treated group in period t}

\item{Y0tmin1}{vector of outcomes for the treated group in period t-1}

\item{Y0tmin2}{vector of outcomes for the treated group in period t-2}

\item{Y0tqteobj}{a qte object for obtaining the counterfactual distribution
of untreated potential outcomes for the treated group in period t}

\item{F.y0}{(optional) pre-computed distribution of counterfactual untreated outcomes for the treated group}

\item{F.y1}{(optional) pre-computed distribution of treated outcomes for the treated group}

\item{h}{optional bandwidth}

\item{method}{"level" or "rank" determining whether method should
be used conditional on ytmin1 or the rank of ytmin1}

\item{cl}{(optional) number of multi-cores to use}
}
\value{
csaboundsobj
}
\description{
Compute bounds on the distribution and quantile of the
 treatment effect as given in Callaway (2017) under the copula
 stability assumption and when a first step estimator of the counterfactual
 distribution of untreated potential outcomes for the treated group is
 available.
}
\examples{
data(displacements)
delt.seq <- seq(-4,4,length.out=50)
y.seq <- seq(6.5,13,length.out=50)
Y1t <- subset(displacements, year==2011 & treat==1)$learn
Y0tmin1 <- subset(displacements, year==2007 & treat==1)$learn
Y0tmin2 <- subset(displacements, year==2003 & treat==1)$learn
cc <- qte::CiC(learn ~ treat,
               t=2011, tmin1=2007, tname="year",
               idname="id", panel=TRUE, data=displacements,
               probs=seq(.05,.95,.01),se=FALSE)
cc$F.treated.tmin2 <- ecdf(Y0tmin2)
cb <- csa.bounds(delt.seq, y.seq, Y1t, Y0tmin1, Y0tmin2, cc, method="level",
      cl=1)
cb
ggCSABounds(cb)

}
